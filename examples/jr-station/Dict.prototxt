name: "Bigram_Net_VGG"

input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 32
  dim: 100
}

layers {
  name: "eccv_train"
  type: "Data"
  top: "data"
  top: "label"  

  include{
    phase: TRAIN
  }
  transform_param {
   #  crop_size: 24  
   #  mean_value: 104
   #  mean_value: 117
   #  mean_value: 123
   #  mirror: true
  }
  data_param {
     source: "examples/jr-station/img_train_lmdb"
     batch_size: 5   # can modified
     backend: LMDB
  }
   
}

layers {
  name: "eccv_train"
  type: "Data"
  top: "data"
  top: "label"

  include {
    phase: TEST
  }
  transform_param {
  #   crop_size: 224
  #   mean_value: 104
  #   mean_value: 117
  #   mean_value: 123
  #   mirror: false
  }
  data_param {
     source: "examples/jr-station/img_test_lmdb"
     batch_size: 5
     backend: LMDB
  }
  
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "relu1"

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    stride: 1
    pad: 2
    weight_filler { # not sure
      type: "gaussian"
      std: 0.01
    }
    bias_filler { # not sure
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "pool1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "relu1"
  top: "conv2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "relu2"

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 5
    stride: 1
    pad: 2
    weight_filler { # not sure
      type: "gaussian"
      std: 0.01
    }
    bias_filler { # not sure
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "pool2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "relu2"
  top: "conv3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "relu3"

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler { # not sure
      type: "gaussian"
      std: 0.01
    }
    bias_filler { # not sure
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3.5"
}

layer {
  name: "conv3.5"
  type: "Convolution"
  bottom: "relu3"
  top: "relu4"

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler { # not sure
      type: "gaussian"
      std: 0.01
    }
    bias_filler { # not sure
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu3.5"
  type: "ReLU"
  bottom: "conv3.5"
  top: "pool3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "relu3.5"
  top: "conv4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "relu4"

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler { # not sure
      type: "gaussian"
      std: 0.01
    }
    bias_filler { # not sure
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "fc1"
}



layer {
  name: "fc1"
  type: "Convolution"
  bottom: "relu4"
  top: "relu5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 4096
    kernel_size : 1
    stride: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu5"
  type: "ReLU"
  bottom: "fc1"
  top: "fc2"
}

layer {
  name: "fc2"
  type: "Convolution"
  bottom: "relu5"
  top: "relu6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 4096
    kernel_size : 1
    stride: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc2"
  top: "probs"
}

layer {
  name: "fc_classes"
  type: "Convolution"
  bottom: "relu6"
  top: "probs"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 88172
    kernel_size : 1
    stride: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "probs"
  type: "Softmax"
  bottom: "relu5"
  top: "probs"
}
